#!/bin/bash
script_dir="$(cd "$(dirname "$0")" && pwd)"
sudo -v
sudo pacman -Sy

yay_install() {
    # Verificar si yay ya estÃ¡ instalado
    if ! command -v yay &>/dev/null; then
        echo "yay is not installed. Installing..."
        git clone https://aur.archlinux.org/yay.git
        cd yay
        makepkg -si --noconfirm
        cd -
        rm -rf yay
    else
        echo "yay is already installed."
    fi
}

install_minimal_apps() {
    declare -a packages

    while IFS= read -r line; do
        packages+=("$line")
    done < apps/minimal

    yay -Sy
    yay -S --noconfirm "${packages[@]}"
}

install_extra_apps() {
    declare -a packages

    while IFS= read -r line; do
        packages+=("$line")
    done < apps/extra

    yay -Sy
    yay -S --noconfirm "${packages[@]}"
}

install_oh_my_fish() {
    cd ~
    git clone https://github.com/oh-my-fish/oh-my-fish
    cd oh-my-fish/bin
    chmod +x install
    ./install --noninteractive
    fish -c "omf install agnoster"
}

config_dunst() {
    local dunstrc_path="$HOME/.config/dunst/dunstrc"
    
    # Verificar si el archivo dunstrc ya existe
    if [ -f "$dunstrc_path" ]; then
        echo "The dunst configuration file already exists."
    else
        # Si el archivo dunstrc no existe, crearlo y configurarlo
        mkdir -p ~/.config/dunst
        cd $script_dir
        cp dunstrc $dunstrc_path
        echo "The dunst configuration file has been created."
    fi
}

config_picom() {
    sudo rm /etc/xdg/picom.conf
    cd $script_dir
    sudo cp picom.conf /etc/xdg/picom.conf
}

create_xinitrc() {
    cd $script_dir
    cp xinitrc ~/.xinitrc
}

generate_xfce4_terminal_config() {
    local config_dir="$HOME/.config/xfce4/xfconf/xfce-perchannel-xml"
    local config_file="$config_dir/xfce4-terminal.xml"

    mkdir -p "$config_dir"
    cd $script_dir
    cp xfce4-terminal.xml $config_file
    echo "File created at $config_file"
}

install_bumblebee_status() {
    cd ~/.config
    git clone https://github.com/tobi-wan-kenobi/bumblebee-status
}

copy_i3_config_file() {
    cd $script_dir
    mkdir -p ~/.config/i3
    cp i3/config ~/.config/i3/config
}

install_apps() {
    install_minimal_apps

    if [ "$1" == "extra" ]; then
        install_extra_apps
    fi
}

install_dark_theme() {
    cd $script_dir
    cp gtkrc-2.0 ~/.gtkrc-2.0
}

generate_neofetch_config() {
    neofetch_config_dir=~/.config/neofetch

    if [ ! -d "$neofetch_config_dir" ]; then
        mkdir -p "$neofetch_config_dir"
    fi

    cp neofetch.conf "$neofetch_config_dir/config.conf"
}

add_neofetch_in_terminals() {
    echo "neofetch" >> ~/.bashrc
    echo "neofetch" >> ~/.config/fish/config.fish
}

put_wallpaper() {
    cd $script_dir
    mkdir ~/images
    cp wall.png ~/images/wall.png

    mkdir ~/.config/nitrogen
    cp nitrogen-save.cfg ~/.config/nitrogen/bg-saved.cfg
}

create_browser_apps() {
    sudo sh -c 'echo "chromium --app=https://youtube.com" > /bin/youtube && chmod +x /bin/youtube'
    sudo sh -c 'echo "chromium --app=https://www.notion.so/" > /bin/notion && chmod +x /bin/notion'
    sudo sh -c 'echo "chromium --app=https://network.wwe.com/" > /bin/wwe && chmod +x /bin/wwe'
    sudo sh -c 'echo "chromium --app=https://chat.openai.com/" > /bin/gptchat && chmod +x /bin/gptchat'
    sudo sh -c 'echo "microsoft-edge-stable --app=https://music.youtube.com" > /bin/ytmusic && chmod +x /bin/ytmusic'
}

install_redshift() {
    cd $script_dir
    cp redshift.conf ~/.config/redshift.conf
}

create_lock_script() {
    cd $script_dir
    sudo cp lock /bin/lock
    chmod +x /bin/lock
}

yay_install
install_apps
create_lock_script
config_dunst
# config_picom
create_xinitrc
generate_xfce4_terminal_config
install_bumblebee_status
copy_i3_config_file
install_oh_my_fish
install_dark_theme
generate_neofetch_config
add_neofetch_in_terminals
put_wallpaper
create_browser_apps
install_redshift
